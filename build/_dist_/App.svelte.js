import './App.svelte.css.proxy.js';
/* src\App.svelte generated by Svelte v3.38.3 */
import {
	SvelteComponent,
	append,
	attr,
	create_component,
	destroy_component,
	detach,
	element,
	init,
	insert,
	mount_component,
	noop,
	safe_not_equal,
	space,
	transition_in,
	transition_out
} from "../_snowpack/pkg/svelte/internal.js";

import Navigation from "./components/Navigation.svelte.js";
import Header from "./components/Header.svelte.js";
import Intro from "./components/Intro.svelte.js";
import About from "./components/About.svelte.js";
import Projects from "./components/Projects.svelte.js";
import Footer from "./components/Footer.svelte.js";
import Tailwind from "./Tailwind.svelte.js";

function create_fragment(ctx) {
	let tailwind;
	let t0;
	let div2;
	let div1;
	let header1;
	let header0;
	let t1;
	let section0;
	let intro;
	let t2;
	let section1;
	let about;
	let t3;
	let section2;
	let t5;
	let section3;
	let projects;
	let t6;
	let footer1;
	let footer0;
	let current;
	tailwind = new Tailwind({});
	header0 = new Header({});
	intro = new Intro({});
	about = new About({});
	projects = new Projects({});
	footer0 = new Footer({});

	return {
		c() {
			create_component(tailwind.$$.fragment);
			t0 = space();
			div2 = element("div");
			div1 = element("div");
			header1 = element("header");
			create_component(header0.$$.fragment);
			t1 = space();
			section0 = element("section");
			create_component(intro.$$.fragment);
			t2 = space();
			section1 = element("section");
			create_component(about.$$.fragment);
			t3 = space();
			section2 = element("section");
			section2.innerHTML = `<div class="max-w-5xl px-6 mx-auto text-center"><h2 class="text-2xl font-semibold text-gray-800">Experience</h2></div>`;
			t5 = space();
			section3 = element("section");
			create_component(projects.$$.fragment);
			t6 = space();
			footer1 = element("footer");
			create_component(footer0.$$.fragment);
			attr(header1, "class", "border-hex-63719e bg-white border-t-8 shadow");
			attr(section0, "class", "mt-20 bg-white");
			attr(section1, "class", "pattern py-20 bg-gray-800");
			attr(section2, "class", "py-20 bg-white");
			attr(section3, "class", "pattern py-20 bg-gray-800");
			attr(footer1, "class", "bg-white");
			attr(div2, "class", "bg-gray-50 h-screen");
		},
		m(target, anchor) {
			mount_component(tailwind, target, anchor);
			insert(target, t0, anchor);
			insert(target, div2, anchor);
			append(div2, div1);
			append(div1, header1);
			mount_component(header0, header1, null);
			append(div1, t1);
			append(div1, section0);
			mount_component(intro, section0, null);
			append(div1, t2);
			append(div1, section1);
			mount_component(about, section1, null);
			append(div1, t3);
			append(div1, section2);
			append(div1, t5);
			append(div1, section3);
			mount_component(projects, section3, null);
			append(div1, t6);
			append(div1, footer1);
			mount_component(footer0, footer1, null);
			current = true;
		},
		p: noop,
		i(local) {
			if (current) return;
			transition_in(tailwind.$$.fragment, local);
			transition_in(header0.$$.fragment, local);
			transition_in(intro.$$.fragment, local);
			transition_in(about.$$.fragment, local);
			transition_in(projects.$$.fragment, local);
			transition_in(footer0.$$.fragment, local);
			current = true;
		},
		o(local) {
			transition_out(tailwind.$$.fragment, local);
			transition_out(header0.$$.fragment, local);
			transition_out(intro.$$.fragment, local);
			transition_out(about.$$.fragment, local);
			transition_out(projects.$$.fragment, local);
			transition_out(footer0.$$.fragment, local);
			current = false;
		},
		d(detaching) {
			destroy_component(tailwind, detaching);
			if (detaching) detach(t0);
			if (detaching) detach(div2);
			destroy_component(header0);
			destroy_component(intro);
			destroy_component(about);
			destroy_component(projects);
			destroy_component(footer0);
		}
	};
}

class App extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, null, create_fragment, safe_not_equal, {});
	}
}

export default App;