import './Counter.svelte.css.proxy.js';
/* src\components\Counter.svelte generated by Svelte v3.38.3 */
import {
	SvelteComponent,
	append,
	attr,
	component_subscribe,
	detach,
	element,
	init,
	insert,
	listen,
	noop,
	safe_not_equal,
	set_data,
	set_store_value,
	text
} from "../../_snowpack/pkg/svelte/internal.js";

import { writable } from "../../_snowpack/pkg/svelte/store.js";

function create_fragment(ctx) {
	let button;
	let t0;
	let t1;
	let mounted;
	let dispose;

	return {
		c() {
			button = element("button");
			t0 = text("Clicks: ");
			t1 = text(/*$count*/ ctx[1]);
			attr(button, "id", /*id*/ ctx[0]);
			attr(button, "data-testid", /*id*/ ctx[0]);
			attr(button, "class", "tabular-nums focus:border-opacity-100 w-48 px-8 py-4 text-red-600 border-2 border-transparent rounded-full outline-none svelte-1c9vzi4");
		},
		m(target, anchor) {
			insert(target, button, anchor);
			append(button, t0);
			append(button, t1);

			if (!mounted) {
				dispose = listen(button, "click", /*click_handler*/ ctx[3]);
				mounted = true;
			}
		},
		p(ctx, [dirty]) {
			if (dirty & /*$count*/ 2) set_data(t1, /*$count*/ ctx[1]);

			if (dirty & /*id*/ 1) {
				attr(button, "id", /*id*/ ctx[0]);
			}

			if (dirty & /*id*/ 1) {
				attr(button, "data-testid", /*id*/ ctx[0]);
			}
		},
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) detach(button);
			mounted = false;
			dispose();
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let $count;
	const count = writable(0);
	component_subscribe($$self, count, value => $$invalidate(1, $count = value));
	let { id } = $$props;
	const click_handler = () => set_store_value(count, $count += 1, $count);

	$$self.$$set = $$props => {
		if ("id" in $$props) $$invalidate(0, id = $$props.id);
	};

	return [id, $count, count, click_handler];
}

class Counter extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, { id: 0 });
	}
}

export default Counter;